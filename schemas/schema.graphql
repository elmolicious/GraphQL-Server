type User {
	email: ID!
	firstName: String!
	lastName: String!
	accountIds: [Int]!
}

type Account {
	id: ID!
	name: String!
	country: Country!
	users: [User!]
}

input UserInput {
	email: ID!
	first_name: String!
	last_name: String!
	accountIds: [Int]!
}

enum Country {
	GERMANY
	USA
}

type Query {
	getUser(id: ID!): User
	getAllUsers: [User]

	getUserBatch(user_ids: [ID!]!): [User]

	getAccount(id: ID!): Account
	getAllAccounts: [Account]
}

type Mutation {
	createUser(input: UserInput!): User
}
